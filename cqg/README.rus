// UTF-8, 0a

Пояснительная записка к коду.

Без учета ограничений по размерам первым на ум приходит использование getline (3) или std::istream::getline().
Заметим, что обе эти функции выдают целиком *всю* строку.

Вспоминая вдруг ограничения по размерам (There is no limitation on length of the sequence) вполне адекватным
кажется отказ от использования сих двух функций.

Огромные объемы данных не будут вводиться вручную. Наверняка, будет использоваться перенаправление потоков
ввода-вывода (pipelining по-модному). При использовании stdin в виде FILE * возникает буферизация потока ввода.

Потому, будет вполне естественно прямое чтение из файла под номером STDIN_FILENO.

Есть такое значение PIPE_BUF. Оно отражает максимальный размер буфера ядра, выделеного под FIFO (7),
в том числе и анонимные. Вполне логичным будет ограничиться его размерами для чтения.

Об исходниках.

Структура такая:
include --- заголовочные файлы библиотеки
lib     --- исходники библиотеки
src     --- исходники тестового модуля

Библиотека состоит из модулей:
Buffer              --- контейнер, неуменьшающийся буфер.
Input               --- модуль чтения из файла с указанным номером и рапортовании о начале
                        новой строки по заданному разделителю.
ParenthesisChecker  --- модуль, проверяющий правильность расстановки скобок.

Input позволяет читать строку больших размеров, по мере ее поступления. Складирует строку в Buffer.
ParenthesisChecker исполнен с возможностью задания строки по мере поступления.

